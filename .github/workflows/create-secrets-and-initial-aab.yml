name: Setup keystore and create initial aab
on: workflow_dispatch

jobs:
  make-upload-key:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          lfs: 'true'
          submodules: 'true'
          fetch-depth: 0

      - name: Create passwords
        id: password
        run: |
          echo "store_password=$(openssl rand -base64 32)" >> $GITHUB_OUTPUT
          echo "key_password=$(openssl rand -base64 32)"   >> $GITHUB_OUTPUT
          echo "alias=upload"                              >> $GITHUB_OUTPUT

      - name: Generate upload keystore (non-interactive)
        run: |
          keytool -genkeypair -v \
            -keystore keystore.jks \
            -storetype JKS \
            -storepass "${{ steps.password.outputs.store_password }}" \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -alias "${{ steps.password.outputs.alias }}" \
            -keypass "${{ steps.password.outputs.key_password }}" \
            -dname "CN=GDS Identity, OU=Digital Identity, O=Government Digital Service, L=London, ST=City of London, C=GB"

      - name: Base64-encode the keystore (store outside workspace)
        run: |
          base64 keystore.jks | tr -d '\n' > "$RUNNER_TEMP/keystore.jks.b64"

      - name: Write repo secrets
        env:
          GH_TOKEN: ${{ secrets.REPO_ADMIN_PAT }}
        run: |
          gh secret set KEYSTORE_BASE64 -R "$GITHUB_REPOSITORY" < "$RUNNER_TEMP/keystore.jks.b64"
          printf "%s" "${{ steps.password.outputs.store_password }}" | gh secret set SIGNING_STORE_PASSWORD -R "$GITHUB_REPOSITORY"
          printf "%s" "${{ steps.password.outputs.key_password }}" | gh secret set SIGNING_KEY_PASSWORD -R "$GITHUB_REPOSITORY"
          printf "%s" "upload" | gh secret set SIGNING_KEY_ALIAS -R "$GITHUB_REPOSITORY"

  bump_and_publish:
    needs: make-upload-key
    permissions:
      id-token: write
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          lfs: 'true'
          submodules: 'true'
          fetch-depth: 0

      - name: Configure git User
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Setup GitHub Runner workflow
        uses: ./mobile-android-pipelines/actions/setup-runner
        with:
          gradle-cache-disabled: "false"
          jdk-version: "21"

      - name: Install homebrew packages
        run: |
          brew bundle

      - name: Grant execute permissions for script files
        run: find ./scripts/ -type f | xargs chmod +x

      - name: Retrieve Secrets
        id: secrets
        uses: ./mobile-android-pipelines/actions/retrieve-secrets
        with:
          keystore-base64: ${{ secrets.KEYSTORE_BASE64 }}
          google-service-account-json-base64: ${{ secrets.SERVICE_ACCOUNT_JSON_BASE64 }}

      - name: Bundle Demo Release
        id: bundle
        uses: ./mobile-android-pipelines/actions/bundle-release-app
        with:
          github-token: ""
          keystore-file-path: ${{ steps.secrets.outputs.keystore-file-path }}
          keystore-password: ${{ secrets.SIGNING_STORE_PASSWORD }}
          keystore-key-alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keystore-key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}
          version-code: ""

      - name: Upload App Bundle as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-bundle
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Clean workspace
        uses: ./mobile-android-pipelines/actions/clean-workspace